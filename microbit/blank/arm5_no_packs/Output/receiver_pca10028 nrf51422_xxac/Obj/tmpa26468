	.syntax unified
	.cpu cortex-m0
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 6
	.eabi_attribute 34, 0
	.eabi_attribute 18, 4
	.thumb
	.syntax unified
	.file	"SEGGER_RTT.c"
	.text
.Ltext0:
	.section	.data._aTerminalId,"aw",%progbits
	.align	2
	.type	_aTerminalId, %object
	.size	_aTerminalId, 16
_aTerminalId:
	.byte	48
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	65
	.byte	66
	.byte	67
	.byte	68
	.byte	69
	.byte	70
	.section	.bss._acUpBuffer,"aw",%nobits
	.align	2
	.type	_acUpBuffer, %object
	.size	_acUpBuffer, 512
_acUpBuffer:
	.space	512
	.section	.bss._acDownBuffer,"aw",%nobits
	.align	2
	.type	_acDownBuffer, %object
	.size	_acDownBuffer, 16
_acDownBuffer:
	.space	16
	.global	_SEGGER_RTT
	.section	.bss._SEGGER_RTT,"aw",%nobits
	.align	2
	.type	_SEGGER_RTT, %object
	.size	_SEGGER_RTT, 120
_SEGGER_RTT:
	.space	120
	.section	.bss._ActiveTerminal,"aw",%nobits
	.type	_ActiveTerminal, %object
	.size	_ActiveTerminal, 1
_ActiveTerminal:
	.space	1
	.section .rodata
	.align	2
.LC1:
	.ascii	"Terminal\000"
	.align	2
.LC5:
	.ascii	"RTT\000"
	.align	2
.LC7:
	.ascii	"SEGGER\000"
	.section	.text._DoInit,"ax",%progbits
	.align	2
	.code	16
	.thumb_func
	.type	_DoInit, %function
_DoInit:
.LFB38:
	.file 1 "C:/Users/Jonathan/Documents/code/arcReceiverMultiChannelSniffer/pca10028/blank/arm5_no_packs/../../../../nRF5_SDK_12.2.0_f012efa/external/segger_rtt/SEGGER_RTT.c"
	.loc 1 163 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI0:
	sub	sp, sp, #8
.LCFI1:
	add	r7, sp, #0
.LCFI2:
	.loc 1 168 0
	ldr	r3, .L2
	str	r3, [r7, #4]
	.loc 1 169 0
	ldr	r3, [r7, #4]
	movs	r2, #2
	str	r2, [r3, #16]
	.loc 1 170 0
	ldr	r3, [r7, #4]
	movs	r2, #2
	str	r2, [r3, #20]
	.loc 1 174 0
	ldr	r3, [r7, #4]
	ldr	r2, .L2+4
	str	r2, [r3, #24]
	.loc 1 175 0
	ldr	r3, [r7, #4]
	ldr	r2, .L2+8
	str	r2, [r3, #28]
	.loc 1 176 0
	ldr	r3, [r7, #4]
	movs	r2, #128
	lsls	r2, r2, #2
	str	r2, [r3, #32]
	.loc 1 177 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #40]
	.loc 1 178 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #36]
	.loc 1 179 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #44]
	.loc 1 183 0
	ldr	r3, [r7, #4]
	ldr	r2, .L2+4
	str	r2, [r3, #72]
	.loc 1 184 0
	ldr	r3, [r7, #4]
	ldr	r2, .L2+12
	str	r2, [r3, #76]
	.loc 1 185 0
	ldr	r3, [r7, #4]
	movs	r2, #16
	str	r2, [r3, #80]
	.loc 1 186 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #88]
	.loc 1 187 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #84]
	.loc 1 188 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #92]
	.loc 1 194 0
	ldr	r3, [r7, #4]
	adds	r3, r3, #7
	ldr	r2, .L2+16
	movs	r1, r2
	movs	r0, r3
	bl	strcpy
	.loc 1 195 0
	ldr	r3, [r7, #4]
	ldr	r2, .L2+20
	movs	r1, r2
	movs	r0, r3
	bl	strcpy
	.loc 1 196 0
	ldr	r3, [r7, #4]
	movs	r2, #32
	strb	r2, [r3, #6]
	.loc 1 197 0
	nop
	mov	sp, r7
	add	sp, sp, #8
	@ sp needed
	pop	{r7, pc}
.L3:
	.align	2
.L2:
	.word	_SEGGER_RTT
	.word	.LC1
	.word	_acUpBuffer
	.word	_acDownBuffer
	.word	.LC5
	.word	.LC7
.LFE38:
	.size	_DoInit, .-_DoInit
	.section	.text._WriteBlocking,"ax",%progbits
	.align	2
	.code	16
	.thumb_func
	.type	_WriteBlocking, %function
_WriteBlocking:
.LFB39:
	.loc 1 218 0
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI3:
	sub	sp, sp, #32
.LCFI4:
	add	r7, sp, #0
.LCFI5:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	.loc 1 226 0
	movs	r3, #0
	str	r3, [r7, #24]
	.loc 1 227 0
	ldr	r3, [r7, #12]
	ldr	r3, [r3, #12]
	str	r3, [r7, #20]
.L10:
	.loc 1 229 0
	ldr	r3, [r7, #12]
	ldr	r3, [r3, #16]
	str	r3, [r7, #16]
	.loc 1 230 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #20]
	cmp	r2, r3
	bls	.L5
	.loc 1 231 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #20]
	subs	r3, r2, r3
	subs	r3, r3, #1
	str	r3, [r7, #28]
	b	.L6
.L5:
	.loc 1 233 0
	ldr	r3, [r7, #12]
	ldr	r2, [r3, #8]
	ldr	r1, [r7, #16]
	ldr	r3, [r7, #20]
	subs	r3, r1, r3
	adds	r3, r2, r3
	subs	r3, r3, #1
	str	r3, [r7, #28]
.L6:
	.loc 1 235 0
	ldr	r3, [r7, #12]
	ldr	r2, [r3, #8]
	ldr	r3, [r7, #20]
	subs	r3, r2, r3
	ldr	r2, [r7, #28]
	cmp	r3, r2
	bls	.L7
	movs	r3, r2
.L7:
	str	r3, [r7, #28]
	.loc 1 236 0
	ldr	r2, [r7, #28]
	ldr	r3, [r7, #4]
	cmp	r3, r2
	bls	.L8
	movs	r3, r2
.L8:
	str	r3, [r7, #28]
	.loc 1 237 0
	ldr	r3, [r7, #12]
	ldr	r2, [r3, #4]
	ldr	r3, [r7, #20]
	adds	r3, r2, r3
	ldr	r2, [r7, #28]
	ldr	r1, [r7, #8]
	movs	r0, r3
	bl	memcpy
	.loc 1 238 0
	ldr	r2, [r7, #24]
	ldr	r3, [r7, #28]
	adds	r3, r2, r3
	str	r3, [r7, #24]
	.loc 1 239 0
	ldr	r2, [r7, #8]
	ldr	r3, [r7, #28]
	adds	r3, r2, r3
	str	r3, [r7, #8]
	.loc 1 240 0
	ldr	r2, [r7, #4]
	ldr	r3, [r7, #28]
	subs	r3, r2, r3
	str	r3, [r7, #4]
	.loc 1 241 0
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #28]
	adds	r3, r2, r3
	str	r3, [r7, #20]
	.loc 1 242 0
	ldr	r3, [r7, #12]
	ldr	r2, [r3, #8]
	ldr	r3, [r7, #20]
	cmp	r2, r3
	bne	.L9
	.loc 1 243 0
	movs	r3, #0
	str	r3, [r7, #20]
.L9:
	.loc 1 245 0
	ldr	r3, [r7, #12]
	ldr	r2, [r7, #20]
	str	r2, [r3, #12]
	.loc 1 246 0
	ldr	r3, [r7, #4]
	cmp	r3, #0
	bne	.L10
	.loc 1 248 0
	ldr	r3, [r7, #24]
	.loc 1 249 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #32
	@ sp needed
	pop	{r7, pc}
.LFE39:
	.size	_WriteBlocking, .-_WriteBlocking
	.section	.text._WriteNoCheck,"ax",%progbits
	.align	2
	.code	16
	.thumb_func
	.type	_WriteNoCheck, %function
_WriteNoCheck:
.LFB40:
	.loc 1 269 0
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI6:
	sub	sp, sp, #32
.LCFI7:
	add	r7, sp, #0
.LCFI8:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	.loc 1 274 0
	ldr	r3, [r7, #12]
	ldr	r3, [r3, #12]
	str	r3, [r7, #28]
	.loc 1 275 0
	ldr	r3, [r7, #12]
	ldr	r2, [r3, #8]
	ldr	r3, [r7, #28]
	subs	r3, r2, r3
	str	r3, [r7, #24]
	.loc 1 276 0
	ldr	r2, [r7, #24]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bls	.L13
	.loc 1 280 0
	ldr	r3, [r7, #12]
	ldr	r2, [r3, #4]
	ldr	r3, [r7, #28]
	adds	r3, r2, r3
	ldr	r2, [r7, #4]
	ldr	r1, [r7, #8]
	movs	r0, r3
	bl	memcpy
	.loc 1 281 0
	ldr	r2, [r7, #28]
	ldr	r3, [r7, #4]
	adds	r2, r2, r3
	ldr	r3, [r7, #12]
	str	r2, [r3, #12]
	.loc 1 292 0
	b	.L15
.L13:
	.loc 1 286 0
	ldr	r3, [r7, #24]
	str	r3, [r7, #20]
	.loc 1 287 0
	ldr	r3, [r7, #12]
	ldr	r2, [r3, #4]
	ldr	r3, [r7, #28]
	adds	r3, r2, r3
	ldr	r2, [r7, #20]
	ldr	r1, [r7, #8]
	movs	r0, r3
	bl	memcpy
	.loc 1 288 0
	ldr	r2, [r7, #4]
	ldr	r3, [r7, #24]
	subs	r3, r2, r3
	str	r3, [r7, #20]
	.loc 1 289 0
	ldr	r3, [r7, #12]
	ldr	r0, [r3, #4]
	ldr	r2, [r7, #8]
	ldr	r3, [r7, #24]
	adds	r3, r2, r3
	ldr	r2, [r7, #20]
	movs	r1, r3
	bl	memcpy
	.loc 1 290 0
	ldr	r3, [r7, #12]
	ldr	r2, [r7, #20]
	str	r2, [r3, #12]
.L15:
	.loc 1 292 0
	nop
	mov	sp, r7
	add	sp, sp, #32
	@ sp needed
	pop	{r7, pc}
.LFE40:
	.size	_WriteNoCheck, .-_WriteNoCheck
	.section	.text._PostTerminalSwitch,"ax",%progbits
	.align	2
	.code	16
	.thumb_func
	.type	_PostTerminalSwitch, %function
_PostTerminalSwitch:
.LFB41:
	.loc 1 307 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI9:
	sub	sp, sp, #16
.LCFI10:
	add	r7, sp, #0
.LCFI11:
	str	r0, [r7, #4]
	movs	r2, r1
	adds	r3, r7, #3
	strb	r2, [r3]
	.loc 1 310 0
	movs	r3, #12
	adds	r3, r7, r3
	movs	r2, #255
	strb	r2, [r3]
	.loc 1 311 0
	adds	r3, r7, #3
	ldrb	r3, [r3]
	ldr	r2, .L17
	ldrb	r2, [r2, r3]
	movs	r3, #12
	adds	r3, r7, r3
	strb	r2, [r3, #1]
	.loc 1 312 0
	movs	r3, #12
	adds	r1, r7, r3
	ldr	r3, [r7, #4]
	movs	r2, #2
	movs	r0, r3
	bl	_WriteBlocking
	.loc 1 313 0
	nop
	mov	sp, r7
	add	sp, sp, #16
	@ sp needed
	pop	{r7, pc}
.L18:
	.align	2
.L17:
	.word	_aTerminalId
.LFE41:
	.size	_PostTerminalSwitch, .-_PostTerminalSwitch
	.section	.text._GetAvailWriteSpace,"ax",%progbits
	.align	2
	.code	16
	.thumb_func
	.type	_GetAvailWriteSpace, %function
_GetAvailWriteSpace:
.LFB42:
	.loc 1 329 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI12:
	sub	sp, sp, #24
.LCFI13:
	add	r7, sp, #0
.LCFI14:
	str	r0, [r7, #4]
	.loc 1 337 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	str	r3, [r7, #16]
	.loc 1 338 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	str	r3, [r7, #12]
	.loc 1 339 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #12]
	cmp	r2, r3
	bhi	.L20
	.loc 1 340 0
	ldr	r3, [r7, #4]
	ldr	r2, [r3, #8]
	ldr	r3, [r7, #12]
	subs	r2, r2, r3
	ldr	r3, [r7, #16]
	adds	r3, r2, r3
	subs	r3, r3, #1
	str	r3, [r7, #20]
	b	.L21
.L20:
	.loc 1 342 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #12]
	subs	r3, r2, r3
	subs	r3, r3, #1
	str	r3, [r7, #20]
.L21:
	.loc 1 344 0
	ldr	r3, [r7, #20]
	.loc 1 345 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #24
	@ sp needed
	pop	{r7, pc}
.LFE42:
	.size	_GetAvailWriteSpace, .-_GetAvailWriteSpace
	.section	.text.SEGGER_RTT_ReadNoLock,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_ReadNoLock
	.code	16
	.thumb_func
	.type	SEGGER_RTT_ReadNoLock, %function
SEGGER_RTT_ReadNoLock:
.LFB43:
	.loc 1 370 0
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI15:
	sub	sp, sp, #40
.LCFI16:
	add	r7, sp, #0
.LCFI17:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	.loc 1 378 0
	ldr	r3, .L31
	ldrb	r3, [r3]
	cmp	r3, #0
	bne	.L24
	.loc 1 378 0 is_stmt 0 discriminator 1
	bl	_DoInit
.L24:
	.loc 1 379 0 is_stmt 1
	ldr	r2, [r7, #12]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r3, #72
	movs	r2, r3
	ldr	r3, .L31
	adds	r3, r2, r3
	str	r3, [r7, #24]
	.loc 1 380 0
	ldr	r3, [r7, #8]
	str	r3, [r7, #28]
	.loc 1 381 0
	ldr	r3, [r7, #24]
	ldr	r3, [r3, #16]
	str	r3, [r7, #32]
	.loc 1 382 0
	ldr	r3, [r7, #24]
	ldr	r3, [r3, #12]
	str	r3, [r7, #20]
	.loc 1 383 0
	movs	r3, #0
	str	r3, [r7, #36]
	.loc 1 387 0
	ldr	r2, [r7, #32]
	ldr	r3, [r7, #20]
	cmp	r2, r3
	bls	.L25
	.loc 1 388 0
	ldr	r3, [r7, #24]
	ldr	r2, [r3, #8]
	ldr	r3, [r7, #32]
	subs	r3, r2, r3
	str	r3, [r7, #16]
	.loc 1 389 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #4]
	cmp	r3, r2
	bls	.L26
	movs	r3, r2
.L26:
	str	r3, [r7, #16]
	.loc 1 390 0
	ldr	r3, [r7, #24]
	ldr	r2, [r3, #4]
	ldr	r3, [r7, #32]
	adds	r1, r2, r3
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #28]
	movs	r0, r3
	bl	memcpy
	.loc 1 391 0
	ldr	r2, [r7, #36]
	ldr	r3, [r7, #16]
	adds	r3, r2, r3
	str	r3, [r7, #36]
	.loc 1 392 0
	ldr	r2, [r7, #28]
	ldr	r3, [r7, #16]
	adds	r3, r2, r3
	str	r3, [r7, #28]
	.loc 1 393 0
	ldr	r2, [r7, #4]
	ldr	r3, [r7, #16]
	subs	r3, r2, r3
	str	r3, [r7, #4]
	.loc 1 394 0
	ldr	r2, [r7, #32]
	ldr	r3, [r7, #16]
	adds	r3, r2, r3
	str	r3, [r7, #32]
	.loc 1 398 0
	ldr	r3, [r7, #24]
	ldr	r2, [r3, #8]
	ldr	r3, [r7, #32]
	cmp	r2, r3
	bne	.L25
	.loc 1 399 0
	movs	r3, #0
	str	r3, [r7, #32]
.L25:
	.loc 1 405 0
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #32]
	subs	r3, r2, r3
	str	r3, [r7, #16]
	.loc 1 406 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #4]
	cmp	r3, r2
	bls	.L27
	movs	r3, r2
.L27:
	str	r3, [r7, #16]
	.loc 1 407 0
	ldr	r3, [r7, #16]
	cmp	r3, #0
	beq	.L28
	.loc 1 408 0
	ldr	r3, [r7, #24]
	ldr	r2, [r3, #4]
	ldr	r3, [r7, #32]
	adds	r1, r2, r3
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #28]
	movs	r0, r3
	bl	memcpy
	.loc 1 409 0
	ldr	r2, [r7, #36]
	ldr	r3, [r7, #16]
	adds	r3, r2, r3
	str	r3, [r7, #36]
	.loc 1 410 0
	ldr	r2, [r7, #28]
	ldr	r3, [r7, #16]
	adds	r3, r2, r3
	str	r3, [r7, #28]
	.loc 1 411 0
	ldr	r2, [r7, #4]
	ldr	r3, [r7, #16]
	subs	r3, r2, r3
	str	r3, [r7, #4]
	.loc 1 412 0
	ldr	r2, [r7, #32]
	ldr	r3, [r7, #16]
	adds	r3, r2, r3
	str	r3, [r7, #32]
.L28:
	.loc 1 414 0
	ldr	r3, [r7, #36]
	cmp	r3, #0
	beq	.L29
	.loc 1 415 0
	ldr	r3, [r7, #24]
	ldr	r2, [r7, #32]
	str	r2, [r3, #16]
.L29:
	.loc 1 418 0
	ldr	r3, [r7, #36]
	.loc 1 419 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #40
	@ sp needed
	pop	{r7, pc}
.L32:
	.align	2
.L31:
	.word	_SEGGER_RTT
.LFE43:
	.size	SEGGER_RTT_ReadNoLock, .-SEGGER_RTT_ReadNoLock
	.section	.text.SEGGER_RTT_Read,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_Read
	.code	16
	.thumb_func
	.type	SEGGER_RTT_Read, %function
SEGGER_RTT_Read:
.LFB44:
	.loc 1 437 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI18:
	sub	sp, sp, #24
.LCFI19:
	add	r7, sp, #0
.LCFI20:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	.loc 1 441 0
	movs	r3, #0
	str	r3, [r7, #16]
	movs	r0, #0
	bl	app_util_critical_region_enter
	.loc 1 445 0
	ldr	r2, [r7, #4]
	ldr	r1, [r7, #8]
	ldr	r3, [r7, #12]
	movs	r0, r3
	bl	SEGGER_RTT_ReadNoLock
	movs	r3, r0
	str	r3, [r7, #20]
	.loc 1 449 0
	ldr	r3, [r7, #16]
	movs	r0, #0
	bl	app_util_critical_region_exit
	.loc 1 451 0
	ldr	r3, [r7, #20]
	.loc 1 452 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #24
	@ sp needed
	pop	{r7, pc}
.LFE44:
	.size	SEGGER_RTT_Read, .-SEGGER_RTT_Read
	.section	.text.SEGGER_RTT_WriteSkipNoLock,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_WriteSkipNoLock
	.code	16
	.thumb_func
	.type	SEGGER_RTT_WriteSkipNoLock, %function
SEGGER_RTT_WriteSkipNoLock:
.LFB45:
	.loc 1 478 0
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI21:
	sub	sp, sp, #40
.LCFI22:
	add	r7, sp, #0
.LCFI23:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	.loc 1 486 0
	ldr	r3, [r7, #8]
	str	r3, [r7, #36]
	.loc 1 490 0
	ldr	r3, [r7, #12]
	adds	r2, r3, #1
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	ldr	r2, .L42
	adds	r3, r3, r2
	str	r3, [r7, #32]
	.loc 1 491 0
	ldr	r3, [r7, #32]
	ldr	r3, [r3, #16]
	str	r3, [r7, #28]
	.loc 1 492 0
	ldr	r3, [r7, #32]
	ldr	r3, [r3, #12]
	str	r3, [r7, #24]
	.loc 1 506 0
	ldr	r2, [r7, #28]
	ldr	r3, [r7, #24]
	cmp	r2, r3
	bhi	.L36
	.loc 1 510 0
	ldr	r3, [r7, #32]
	ldr	r2, [r3, #8]
	ldr	r3, [r7, #24]
	subs	r3, r2, r3
	subs	r3, r3, #1
	str	r3, [r7, #20]
	.loc 1 511 0
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bcc	.L37
	.loc 1 512 0
	ldr	r3, [r7, #32]
	ldr	r2, [r3, #4]
	ldr	r3, [r7, #24]
	adds	r3, r2, r3
	ldr	r2, [r7, #4]
	ldr	r1, [r7, #36]
	movs	r0, r3
	bl	memcpy
	.loc 1 513 0
	ldr	r2, [r7, #24]
	ldr	r3, [r7, #4]
	adds	r2, r2, r3
	ldr	r3, [r7, #32]
	str	r2, [r3, #12]
	.loc 1 514 0
	movs	r3, #1
	b	.L38
.L37:
	.loc 1 519 0
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #28]
	adds	r3, r2, r3
	str	r3, [r7, #20]
	.loc 1 523 0
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bcc	.L39
	.loc 1 527 0
	ldr	r3, [r7, #32]
	ldr	r2, [r3, #8]
	ldr	r3, [r7, #24]
	subs	r3, r2, r3
	str	r3, [r7, #16]
	.loc 1 528 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bls	.L40
	.loc 1 529 0
	ldr	r3, [r7, #32]
	ldr	r2, [r3, #4]
	ldr	r3, [r7, #24]
	adds	r3, r2, r3
	ldr	r2, [r7, #4]
	ldr	r1, [r7, #36]
	movs	r0, r3
	bl	memcpy
	.loc 1 530 0
	ldr	r2, [r7, #24]
	ldr	r3, [r7, #4]
	adds	r2, r2, r3
	ldr	r3, [r7, #32]
	str	r2, [r3, #12]
	b	.L41
.L40:
	.loc 1 535 0
	ldr	r3, [r7, #32]
	ldr	r2, [r3, #4]
	ldr	r3, [r7, #24]
	adds	r3, r2, r3
	ldr	r2, [r7, #16]
	ldr	r1, [r7, #36]
	movs	r0, r3
	bl	memcpy
	.loc 1 536 0
	ldr	r3, [r7, #32]
	ldr	r0, [r3, #4]
	ldr	r2, [r7, #36]
	ldr	r3, [r7, #16]
	adds	r1, r2, r3
	ldr	r2, [r7, #4]
	ldr	r3, [r7, #16]
	subs	r3, r2, r3
	movs	r2, r3
	bl	memcpy
	.loc 1 537 0
	ldr	r2, [r7, #4]
	ldr	r3, [r7, #16]
	subs	r2, r2, r3
	ldr	r3, [r7, #32]
	str	r2, [r3, #12]
.L41:
	.loc 1 539 0
	movs	r3, #1
	b	.L38
.L36:
	.loc 1 542 0
	ldr	r2, [r7, #28]
	ldr	r3, [r7, #24]
	subs	r3, r2, r3
	subs	r3, r3, #1
	str	r3, [r7, #20]
	.loc 1 543 0
	ldr	r2, [r7, #20]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bcc	.L39
	.loc 1 544 0
	ldr	r3, [r7, #32]
	ldr	r2, [r3, #4]
	ldr	r3, [r7, #24]
	adds	r3, r2, r3
	ldr	r2, [r7, #4]
	ldr	r1, [r7, #36]
	movs	r0, r3
	bl	memcpy
	.loc 1 545 0
	ldr	r2, [r7, #24]
	ldr	r3, [r7, #4]
	adds	r2, r2, r3
	ldr	r3, [r7, #32]
	str	r2, [r3, #12]
	.loc 1 546 0
	movs	r3, #1
	b	.L38
.L39:
	.loc 1 552 0
	movs	r3, #0
.L38:
	.loc 1 553 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #40
	@ sp needed
	pop	{r7, pc}
.L43:
	.align	2
.L42:
	.word	_SEGGER_RTT
.LFE45:
	.size	SEGGER_RTT_WriteSkipNoLock, .-SEGGER_RTT_WriteSkipNoLock
	.section	.text.SEGGER_RTT_WriteNoLock,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_WriteNoLock
	.code	16
	.thumb_func
	.type	SEGGER_RTT_WriteNoLock, %function
SEGGER_RTT_WriteNoLock:
.LFB46:
	.loc 1 578 0
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI24:
	sub	sp, sp, #32
.LCFI25:
	add	r7, sp, #0
.LCFI26:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	.loc 1 584 0
	ldr	r3, [r7, #8]
	str	r3, [r7, #24]
	.loc 1 588 0
	ldr	r3, [r7, #12]
	adds	r2, r3, #1
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	ldr	r2, .L55
	adds	r3, r3, r2
	str	r3, [r7, #20]
	.loc 1 592 0
	ldr	r3, [r7, #20]
	ldr	r3, [r3, #20]
	cmp	r3, #1
	beq	.L46
	bcc	.L47
	cmp	r3, #2
	beq	.L48
	b	.L54
.L47:
	.loc 1 598 0
	ldr	r3, [r7, #20]
	movs	r0, r3
	bl	_GetAvailWriteSpace
	movs	r3, r0
	str	r3, [r7, #16]
	.loc 1 599 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bcs	.L49
	.loc 1 600 0
	movs	r3, #0
	str	r3, [r7, #28]
	.loc 1 605 0
	b	.L51
.L49:
	.loc 1 602 0
	ldr	r3, [r7, #4]
	str	r3, [r7, #28]
	.loc 1 603 0
	ldr	r2, [r7, #4]
	ldr	r1, [r7, #24]
	ldr	r3, [r7, #20]
	movs	r0, r3
	bl	_WriteNoCheck
	.loc 1 605 0
	b	.L51
.L46:
	.loc 1 610 0
	ldr	r3, [r7, #20]
	movs	r0, r3
	bl	_GetAvailWriteSpace
	movs	r3, r0
	str	r3, [r7, #16]
	.loc 1 611 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7, #4]
	cmp	r3, r2
	bls	.L52
	movs	r3, r2
.L52:
	str	r3, [r7, #28]
	.loc 1 612 0
	ldr	r2, [r7, #28]
	ldr	r1, [r7, #24]
	ldr	r3, [r7, #20]
	movs	r0, r3
	bl	_WriteNoCheck
	.loc 1 613 0
	b	.L51
.L48:
	.loc 1 618 0
	ldr	r2, [r7, #4]
	ldr	r1, [r7, #24]
	ldr	r3, [r7, #20]
	movs	r0, r3
	bl	_WriteBlocking
	movs	r3, r0
	str	r3, [r7, #28]
	.loc 1 619 0
	b	.L51
.L54:
	.loc 1 621 0
	movs	r3, #0
	str	r3, [r7, #28]
	.loc 1 622 0
	nop
.L51:
	.loc 1 627 0
	ldr	r3, [r7, #28]
	.loc 1 628 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #32
	@ sp needed
	pop	{r7, pc}
.L56:
	.align	2
.L55:
	.word	_SEGGER_RTT
.LFE46:
	.size	SEGGER_RTT_WriteNoLock, .-SEGGER_RTT_WriteNoLock
	.section	.text.SEGGER_RTT_Write,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_Write
	.code	16
	.thumb_func
	.type	SEGGER_RTT_Write, %function
SEGGER_RTT_Write:
.LFB47:
	.loc 1 649 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI27:
	sub	sp, sp, #24
.LCFI28:
	add	r7, sp, #0
.LCFI29:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	.loc 1 653 0
	ldr	r3, .L60
	ldrb	r3, [r3]
	cmp	r3, #0
	bne	.L58
	.loc 1 653 0 is_stmt 0 discriminator 1
	bl	_DoInit
.L58:
	.loc 1 654 0 is_stmt 1
	movs	r3, #0
	str	r3, [r7, #16]
	movs	r0, #0
	bl	app_util_critical_region_enter
	.loc 1 658 0
	ldr	r2, [r7, #4]
	ldr	r1, [r7, #8]
	ldr	r3, [r7, #12]
	movs	r0, r3
	bl	SEGGER_RTT_WriteNoLock
	movs	r3, r0
	str	r3, [r7, #20]
	.loc 1 662 0
	ldr	r3, [r7, #16]
	movs	r0, #0
	bl	app_util_critical_region_exit
	.loc 1 664 0
	ldr	r3, [r7, #20]
	.loc 1 665 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #24
	@ sp needed
	pop	{r7, pc}
.L61:
	.align	2
.L60:
	.word	_SEGGER_RTT
.LFE47:
	.size	SEGGER_RTT_Write, .-SEGGER_RTT_Write
	.section	.text.SEGGER_RTT_WriteString,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_WriteString
	.code	16
	.thumb_func
	.type	SEGGER_RTT_WriteString, %function
SEGGER_RTT_WriteString:
.LFB48:
	.loc 1 688 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI30:
	sub	sp, sp, #16
.LCFI31:
	add	r7, sp, #0
.LCFI32:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 691 0
	ldr	r3, [r7]
	movs	r0, r3
	bl	strlen
	movs	r3, r0
	str	r3, [r7, #12]
	.loc 1 692 0
	ldr	r2, [r7, #12]
	ldr	r1, [r7]
	ldr	r3, [r7, #4]
	movs	r0, r3
	bl	SEGGER_RTT_Write
	movs	r3, r0
	.loc 1 693 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #16
	@ sp needed
	pop	{r7, pc}
.LFE48:
	.size	SEGGER_RTT_WriteString, .-SEGGER_RTT_WriteString
	.section	.text.SEGGER_RTT_GetKey,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_GetKey
	.code	16
	.thumb_func
	.type	SEGGER_RTT_GetKey, %function
SEGGER_RTT_GetKey:
.LFB49:
	.loc 1 710 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI33:
	sub	sp, sp, #8
.LCFI34:
	add	r7, sp, #0
.LCFI35:
	.loc 1 714 0
	adds	r3, r7, #3
	movs	r2, #1
	movs	r1, r3
	movs	r0, #0
	bl	SEGGER_RTT_Read
	movs	r3, r0
	str	r3, [r7, #4]
	.loc 1 715 0
	ldr	r3, [r7, #4]
	cmp	r3, #1
	bne	.L65
	.loc 1 716 0
	adds	r3, r7, #3
	ldrb	r3, [r3]
	str	r3, [r7, #4]
	b	.L66
.L65:
	.loc 1 718 0
	movs	r3, #1
	rsbs	r3, r3, #0
	str	r3, [r7, #4]
.L66:
	.loc 1 720 0
	ldr	r3, [r7, #4]
	.loc 1 721 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #8
	@ sp needed
	pop	{r7, pc}
.LFE49:
	.size	SEGGER_RTT_GetKey, .-SEGGER_RTT_GetKey
	.section	.text.SEGGER_RTT_WaitKey,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_WaitKey
	.code	16
	.thumb_func
	.type	SEGGER_RTT_WaitKey, %function
SEGGER_RTT_WaitKey:
.LFB50:
	.loc 1 738 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI36:
	sub	sp, sp, #8
.LCFI37:
	add	r7, sp, #0
.LCFI38:
.L69:
	.loc 1 742 0 discriminator 1
	bl	SEGGER_RTT_GetKey
	movs	r3, r0
	str	r3, [r7, #4]
	.loc 1 743 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #0
	blt	.L69
	.loc 1 744 0
	ldr	r3, [r7, #4]
	.loc 1 745 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #8
	@ sp needed
	pop	{r7, pc}
.LFE50:
	.size	SEGGER_RTT_WaitKey, .-SEGGER_RTT_WaitKey
	.section	.text.SEGGER_RTT_HasKey,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_HasKey
	.code	16
	.thumb_func
	.type	SEGGER_RTT_HasKey, %function
SEGGER_RTT_HasKey:
.LFB51:
	.loc 1 761 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI39:
	sub	sp, sp, #8
.LCFI40:
	add	r7, sp, #0
.LCFI41:
	.loc 1 765 0
	ldr	r3, .L76
	ldrb	r3, [r3]
	cmp	r3, #0
	bne	.L72
	.loc 1 765 0 is_stmt 0 discriminator 1
	bl	_DoInit
.L72:
	.loc 1 766 0 is_stmt 1
	ldr	r3, .L76
	ldr	r3, [r3, #88]
	str	r3, [r7]
	.loc 1 767 0
	ldr	r3, .L76
	ldr	r2, [r3, #84]
	ldr	r3, [r7]
	cmp	r2, r3
	beq	.L73
	.loc 1 768 0
	movs	r3, #1
	str	r3, [r7, #4]
	b	.L74
.L73:
	.loc 1 770 0
	movs	r3, #0
	str	r3, [r7, #4]
.L74:
	.loc 1 772 0
	ldr	r3, [r7, #4]
	.loc 1 773 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #8
	@ sp needed
	pop	{r7, pc}
.L77:
	.align	2
.L76:
	.word	_SEGGER_RTT
.LFE51:
	.size	SEGGER_RTT_HasKey, .-SEGGER_RTT_HasKey
	.section	.text.SEGGER_RTT_HasData,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_HasData
	.code	16
	.thumb_func
	.type	SEGGER_RTT_HasData, %function
SEGGER_RTT_HasData:
.LFB52:
	.loc 1 787 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI42:
	sub	sp, sp, #16
.LCFI43:
	add	r7, sp, #0
.LCFI44:
	str	r0, [r7, #4]
	.loc 1 791 0
	ldr	r2, [r7, #4]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r3, #72
	movs	r2, r3
	ldr	r3, .L80
	adds	r3, r2, r3
	str	r3, [r7, #12]
	.loc 1 792 0
	ldr	r3, [r7, #12]
	ldr	r3, [r3, #12]
	str	r3, [r7, #8]
	.loc 1 793 0
	ldr	r3, [r7, #12]
	ldr	r3, [r3, #16]
	ldr	r2, [r7, #8]
	subs	r3, r2, r3
	.loc 1 794 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #16
	@ sp needed
	pop	{r7, pc}
.L81:
	.align	2
.L80:
	.word	_SEGGER_RTT
.LFE52:
	.size	SEGGER_RTT_HasData, .-SEGGER_RTT_HasData
	.section	.text.SEGGER_RTT_ConfigUpBuffer,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_ConfigUpBuffer
	.code	16
	.thumb_func
	.type	SEGGER_RTT_ConfigUpBuffer, %function
SEGGER_RTT_ConfigUpBuffer:
.LFB53:
	.loc 1 817 0
	@ args = 4, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI45:
	sub	sp, sp, #24
.LCFI46:
	add	r7, sp, #0
.LCFI47:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	str	r3, [r7]
	.loc 1 821 0
	ldr	r3, .L88
	ldrb	r3, [r3]
	cmp	r3, #0
	bne	.L83
	.loc 1 821 0 is_stmt 0 discriminator 1
	bl	_DoInit
.L83:
	.loc 1 822 0 is_stmt 1
	ldr	r3, .L88
	ldr	r3, [r3, #16]
	movs	r2, r3
	ldr	r3, [r7, #12]
	cmp	r2, r3
	bls	.L84
	.loc 1 823 0
	movs	r3, #0
	str	r3, [r7, #16]
	movs	r0, #0
	bl	app_util_critical_region_enter
	.loc 1 824 0
	ldr	r3, [r7, #12]
	cmp	r3, #0
	beq	.L85
	.loc 1 825 0
	ldr	r1, .L88
	ldr	r3, [r7, #12]
	adds	r2, r3, #1
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	ldr	r2, [r7, #8]
	str	r2, [r3, r1]
	.loc 1 826 0
	ldr	r1, .L88
	ldr	r3, [r7, #12]
	adds	r2, r3, #1
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r1, r3
	adds	r3, r3, #4
	ldr	r2, [r7, #4]
	str	r2, [r3]
	.loc 1 827 0
	ldr	r1, .L88
	ldr	r2, [r7, #12]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r1, r3
	adds	r3, r3, #32
	ldr	r2, [r7]
	str	r2, [r3]
	.loc 1 828 0
	ldr	r1, .L88
	ldr	r2, [r7, #12]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r1, r3
	adds	r3, r3, #40
	movs	r2, #0
	str	r2, [r3]
	.loc 1 829 0
	ldr	r1, .L88
	ldr	r2, [r7, #12]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r1, r3
	adds	r3, r3, #36
	movs	r2, #0
	str	r2, [r3]
.L85:
	.loc 1 831 0
	ldr	r1, .L88
	ldr	r2, [r7, #12]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r1, r3
	adds	r3, r3, #44
	ldr	r2, [r7, #32]
	str	r2, [r3]
	.loc 1 832 0
	ldr	r3, [r7, #16]
	movs	r0, #0
	bl	app_util_critical_region_exit
	.loc 1 833 0
	movs	r3, #0
	str	r3, [r7, #20]
	b	.L86
.L84:
	.loc 1 835 0
	movs	r3, #1
	rsbs	r3, r3, #0
	str	r3, [r7, #20]
.L86:
	.loc 1 837 0
	ldr	r3, [r7, #20]
	.loc 1 838 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #24
	@ sp needed
	pop	{r7, pc}
.L89:
	.align	2
.L88:
	.word	_SEGGER_RTT
.LFE53:
	.size	SEGGER_RTT_ConfigUpBuffer, .-SEGGER_RTT_ConfigUpBuffer
	.section	.text.SEGGER_RTT_ConfigDownBuffer,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_ConfigDownBuffer
	.code	16
	.thumb_func
	.type	SEGGER_RTT_ConfigDownBuffer, %function
SEGGER_RTT_ConfigDownBuffer:
.LFB54:
	.loc 1 860 0
	@ args = 4, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI48:
	sub	sp, sp, #24
.LCFI49:
	add	r7, sp, #0
.LCFI50:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	str	r3, [r7]
	.loc 1 864 0
	ldr	r3, .L96
	ldrb	r3, [r3]
	cmp	r3, #0
	bne	.L91
	.loc 1 864 0 is_stmt 0 discriminator 1
	bl	_DoInit
.L91:
	.loc 1 865 0 is_stmt 1
	ldr	r3, .L96
	ldr	r3, [r3, #20]
	movs	r2, r3
	ldr	r3, [r7, #12]
	cmp	r2, r3
	bls	.L92
	.loc 1 866 0
	movs	r3, #0
	str	r3, [r7, #16]
	movs	r0, #0
	bl	app_util_critical_region_enter
	.loc 1 867 0
	ldr	r3, [r7, #12]
	cmp	r3, #0
	beq	.L93
	.loc 1 868 0
	ldr	r1, .L96
	ldr	r2, [r7, #12]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r1, r3
	adds	r3, r3, #72
	ldr	r2, [r7, #8]
	str	r2, [r3]
	.loc 1 869 0
	ldr	r1, .L96
	ldr	r2, [r7, #12]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r1, r3
	adds	r3, r3, #76
	ldr	r2, [r7, #4]
	str	r2, [r3]
	.loc 1 870 0
	ldr	r1, .L96
	ldr	r2, [r7, #12]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r1, r3
	adds	r3, r3, #80
	ldr	r2, [r7]
	str	r2, [r3]
	.loc 1 871 0
	ldr	r1, .L96
	ldr	r2, [r7, #12]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r1, r3
	adds	r3, r3, #88
	movs	r2, #0
	str	r2, [r3]
	.loc 1 872 0
	ldr	r1, .L96
	ldr	r2, [r7, #12]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r1, r3
	adds	r3, r3, #84
	movs	r2, #0
	str	r2, [r3]
.L93:
	.loc 1 874 0
	ldr	r1, .L96
	ldr	r2, [r7, #12]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r1, r3
	adds	r3, r3, #92
	ldr	r2, [r7, #32]
	str	r2, [r3]
	.loc 1 875 0
	ldr	r3, [r7, #16]
	movs	r0, #0
	bl	app_util_critical_region_exit
	.loc 1 876 0
	movs	r3, #0
	str	r3, [r7, #20]
	b	.L94
.L92:
	.loc 1 878 0
	movs	r3, #1
	rsbs	r3, r3, #0
	str	r3, [r7, #20]
.L94:
	.loc 1 880 0
	ldr	r3, [r7, #20]
	.loc 1 881 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #24
	@ sp needed
	pop	{r7, pc}
.L97:
	.align	2
.L96:
	.word	_SEGGER_RTT
.LFE54:
	.size	SEGGER_RTT_ConfigDownBuffer, .-SEGGER_RTT_ConfigDownBuffer
	.section	.text.SEGGER_RTT_SetNameUpBuffer,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_SetNameUpBuffer
	.code	16
	.thumb_func
	.type	SEGGER_RTT_SetNameUpBuffer, %function
SEGGER_RTT_SetNameUpBuffer:
.LFB55:
	.loc 1 899 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI51:
	sub	sp, sp, #16
.LCFI52:
	add	r7, sp, #0
.LCFI53:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 903 0
	ldr	r3, .L103
	ldrb	r3, [r3]
	cmp	r3, #0
	bne	.L99
	.loc 1 903 0 is_stmt 0 discriminator 1
	bl	_DoInit
.L99:
	.loc 1 904 0 is_stmt 1
	ldr	r3, .L103
	ldr	r3, [r3, #16]
	movs	r2, r3
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bls	.L100
	.loc 1 905 0
	movs	r3, #0
	str	r3, [r7, #8]
	movs	r0, #0
	bl	app_util_critical_region_enter
	.loc 1 906 0
	ldr	r1, .L103
	ldr	r3, [r7, #4]
	adds	r2, r3, #1
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	ldr	r2, [r7]
	str	r2, [r3, r1]
	.loc 1 907 0
	ldr	r3, [r7, #8]
	movs	r0, #0
	bl	app_util_critical_region_exit
	.loc 1 908 0
	movs	r3, #0
	str	r3, [r7, #12]
	b	.L101
.L100:
	.loc 1 910 0
	movs	r3, #1
	rsbs	r3, r3, #0
	str	r3, [r7, #12]
.L101:
	.loc 1 912 0
	ldr	r3, [r7, #12]
	.loc 1 913 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #16
	@ sp needed
	pop	{r7, pc}
.L104:
	.align	2
.L103:
	.word	_SEGGER_RTT
.LFE55:
	.size	SEGGER_RTT_SetNameUpBuffer, .-SEGGER_RTT_SetNameUpBuffer
	.section	.text.SEGGER_RTT_SetNameDownBuffer,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_SetNameDownBuffer
	.code	16
	.thumb_func
	.type	SEGGER_RTT_SetNameDownBuffer, %function
SEGGER_RTT_SetNameDownBuffer:
.LFB56:
	.loc 1 931 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI54:
	sub	sp, sp, #16
.LCFI55:
	add	r7, sp, #0
.LCFI56:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 935 0
	ldr	r3, .L110
	ldrb	r3, [r3]
	cmp	r3, #0
	bne	.L106
	.loc 1 935 0 is_stmt 0 discriminator 1
	bl	_DoInit
.L106:
	.loc 1 936 0 is_stmt 1
	ldr	r3, .L110
	ldr	r3, [r3, #20]
	movs	r2, r3
	ldr	r3, [r7, #4]
	cmp	r2, r3
	bls	.L107
	.loc 1 937 0
	movs	r3, #0
	str	r3, [r7, #8]
	movs	r0, #0
	bl	app_util_critical_region_enter
	.loc 1 938 0
	ldr	r1, .L110
	ldr	r2, [r7, #4]
	movs	r3, r2
	lsls	r3, r3, #1
	adds	r3, r3, r2
	lsls	r3, r3, #3
	adds	r3, r1, r3
	adds	r3, r3, #72
	ldr	r2, [r7]
	str	r2, [r3]
	.loc 1 939 0
	ldr	r3, [r7, #8]
	movs	r0, #0
	bl	app_util_critical_region_exit
	.loc 1 940 0
	movs	r3, #0
	str	r3, [r7, #12]
	b	.L108
.L107:
	.loc 1 942 0
	movs	r3, #1
	rsbs	r3, r3, #0
	str	r3, [r7, #12]
.L108:
	.loc 1 944 0
	ldr	r3, [r7, #12]
	.loc 1 945 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #16
	@ sp needed
	pop	{r7, pc}
.L111:
	.align	2
.L110:
	.word	_SEGGER_RTT
.LFE56:
	.size	SEGGER_RTT_SetNameDownBuffer, .-SEGGER_RTT_SetNameDownBuffer
	.section	.text.SEGGER_RTT_Init,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_Init
	.code	16
	.thumb_func
	.type	SEGGER_RTT_Init, %function
SEGGER_RTT_Init:
.LFB57:
	.loc 1 956 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI57:
	add	r7, sp, #0
.LCFI58:
	.loc 1 957 0
	ldr	r3, .L115
	ldrb	r3, [r3]
	cmp	r3, #0
	bne	.L114
	.loc 1 957 0 is_stmt 0 discriminator 1
	bl	_DoInit
.L114:
	.loc 1 958 0 is_stmt 1
	nop
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L116:
	.align	2
.L115:
	.word	_SEGGER_RTT
.LFE57:
	.size	SEGGER_RTT_Init, .-SEGGER_RTT_Init
	.section	.text.SEGGER_RTT_SetTerminal,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_SetTerminal
	.code	16
	.thumb_func
	.type	SEGGER_RTT_SetTerminal, %function
SEGGER_RTT_SetTerminal:
.LFB58:
	.loc 1 974 0
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI59:
	sub	sp, sp, #32
.LCFI60:
	add	r7, sp, #0
.LCFI61:
	movs	r2, r0
	adds	r3, r7, #7
	strb	r2, [r3]
	.loc 1 981 0
	ldr	r3, .L125
	ldrb	r3, [r3]
	cmp	r3, #0
	bne	.L118
	.loc 1 981 0 is_stmt 0 discriminator 1
	bl	_DoInit
.L118:
	.loc 1 983 0 is_stmt 1
	movs	r3, #0
	str	r3, [r7, #28]
	.loc 1 984 0
	movs	r3, #16
	adds	r3, r7, r3
	movs	r2, #255
	strb	r2, [r3]
	.loc 1 985 0
	adds	r3, r7, #7
	ldrb	r3, [r3]
	cmp	r3, #15
	bhi	.L119
	.loc 1 986 0
	adds	r3, r7, #7
	ldrb	r3, [r3]
	ldr	r2, .L125+4
	ldrb	r2, [r2, r3]
	movs	r3, #16
	adds	r3, r7, r3
	strb	r2, [r3, #1]
	.loc 1 987 0
	ldr	r3, .L125+8
	str	r3, [r7, #24]
	.loc 1 988 0
	movs	r3, #0
	str	r3, [r7, #12]
	movs	r0, #0
	bl	app_util_critical_region_enter
	.loc 1 989 0
	ldr	r3, [r7, #24]
	ldr	r3, [r3, #20]
	movs	r2, #3
	ands	r3, r2
	cmp	r3, #2
	bne	.L120
	.loc 1 990 0
	ldr	r3, .L125+12
	adds	r2, r7, #7
	ldrb	r2, [r2]
	strb	r2, [r3]
	.loc 1 991 0
	movs	r3, #16
	adds	r1, r7, r3
	ldr	r3, [r7, #24]
	movs	r2, #2
	movs	r0, r3
	bl	_WriteBlocking
	b	.L121
.L120:
	.loc 1 993 0
	ldr	r3, [r7, #24]
	movs	r0, r3
	bl	_GetAvailWriteSpace
	movs	r3, r0
	str	r3, [r7, #20]
	.loc 1 994 0
	ldr	r3, [r7, #20]
	cmp	r3, #1
	bls	.L122
	.loc 1 995 0
	ldr	r3, .L125+12
	adds	r2, r7, #7
	ldrb	r2, [r2]
	strb	r2, [r3]
	.loc 1 996 0
	movs	r3, #16
	adds	r1, r7, r3
	ldr	r3, [r7, #24]
	movs	r2, #2
	movs	r0, r3
	bl	_WriteNoCheck
	b	.L121
.L122:
	.loc 1 998 0
	movs	r3, #1
	rsbs	r3, r3, #0
	str	r3, [r7, #28]
.L121:
	.loc 1 1001 0
	ldr	r3, [r7, #12]
	movs	r0, #0
	bl	app_util_critical_region_exit
	b	.L123
.L119:
	.loc 1 1003 0
	movs	r3, #1
	rsbs	r3, r3, #0
	str	r3, [r7, #28]
.L123:
	.loc 1 1005 0
	ldr	r3, [r7, #28]
	.loc 1 1006 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #32
	@ sp needed
	pop	{r7, pc}
.L126:
	.align	2
.L125:
	.word	_SEGGER_RTT
	.word	_aTerminalId
	.word	_SEGGER_RTT+24
	.word	_ActiveTerminal
.LFE58:
	.size	SEGGER_RTT_SetTerminal, .-SEGGER_RTT_SetTerminal
	.section	.text.SEGGER_RTT_TerminalOut,"ax",%progbits
	.align	2
	.global	SEGGER_RTT_TerminalOut
	.code	16
	.thumb_func
	.type	SEGGER_RTT_TerminalOut, %function
SEGGER_RTT_TerminalOut:
.LFB59:
	.loc 1 1025 0
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI62:
	sub	sp, sp, #32
.LCFI63:
	add	r7, sp, #0
.LCFI64:
	movs	r2, r0
	str	r1, [r7]
	adds	r3, r7, #7
	strb	r2, [r3]
	.loc 1 1032 0
	ldr	r3, .L143
	ldrb	r3, [r3]
	cmp	r3, #0
	bne	.L128
	.loc 1 1032 0 is_stmt 0 discriminator 1
	bl	_DoInit
.L128:
	.loc 1 1036 0 is_stmt 1
	adds	r3, r7, #7
	ldrb	r3, [r3]
	cmp	r3, #15
	bls	.LCB1813
	b	.L129	@long jump
.LCB1813:
	.loc 1 1040 0
	ldr	r3, .L143+4
	str	r3, [r7, #24]
	.loc 1 1045 0
	ldr	r3, [r7]
	movs	r0, r3
	bl	strlen
	movs	r3, r0
	str	r3, [r7, #20]
	.loc 1 1049 0
	movs	r3, #0
	str	r3, [r7, #12]
	movs	r0, #0
	bl	app_util_critical_region_enter
	.loc 1 1050 0
	ldr	r3, [r7, #24]
	movs	r0, r3
	bl	_GetAvailWriteSpace
	movs	r3, r0
	str	r3, [r7, #16]
	.loc 1 1051 0
	ldr	r3, [r7, #24]
	ldr	r3, [r3, #20]
	movs	r2, #3
	ands	r3, r2
	cmp	r3, #1
	beq	.L131
	bcc	.L132
	cmp	r3, #2
	beq	.L133
	b	.L142
.L132:
	.loc 1 1057 0
	ldr	r3, [r7, #20]
	adds	r2, r3, #4
	ldr	r3, [r7, #16]
	cmp	r2, r3
	bls	.L134
	.loc 1 1058 0
	movs	r3, #0
	str	r3, [r7, #28]
	.loc 1 1064 0
	b	.L136
.L134:
	.loc 1 1060 0
	adds	r3, r7, #7
	ldrb	r2, [r3]
	ldr	r3, [r7, #24]
	movs	r1, r2
	movs	r0, r3
	bl	_PostTerminalSwitch
	.loc 1 1061 0
	ldr	r2, [r7, #20]
	ldr	r1, [r7]
	ldr	r3, [r7, #24]
	movs	r0, r3
	bl	_WriteBlocking
	movs	r3, r0
	str	r3, [r7, #28]
	.loc 1 1062 0
	ldr	r3, .L143+8
	ldrb	r2, [r3]
	ldr	r3, [r7, #24]
	movs	r1, r2
	movs	r0, r3
	bl	_PostTerminalSwitch
	.loc 1 1064 0
	b	.L136
.L131:
	.loc 1 1071 0
	ldr	r3, [r7, #16]
	cmp	r3, #3
	bhi	.L137
	.loc 1 1072 0
	movs	r3, #1
	rsbs	r3, r3, #0
	str	r3, [r7, #28]
	.loc 1 1078 0
	b	.L136
.L137:
	.loc 1 1074 0
	adds	r3, r7, #7
	ldrb	r2, [r3]
	ldr	r3, [r7, #24]
	movs	r1, r2
	movs	r0, r3
	bl	_PostTerminalSwitch
	.loc 1 1075 0
	ldr	r3, [r7, #16]
	subs	r2, r3, #4
	ldr	r3, [r7, #20]
	cmp	r2, r3
	bls	.L139
	movs	r2, r3
.L139:
	ldr	r1, [r7]
	ldr	r3, [r7, #24]
	movs	r0, r3
	bl	_WriteBlocking
	movs	r3, r0
	str	r3, [r7, #28]
	.loc 1 1076 0
	ldr	r3, .L143+8
	ldrb	r2, [r3]
	ldr	r3, [r7, #24]
	movs	r1, r2
	movs	r0, r3
	bl	_PostTerminalSwitch
	.loc 1 1078 0
	b	.L136
.L133:
	.loc 1 1083 0
	adds	r3, r7, #7
	ldrb	r2, [r3]
	ldr	r3, [r7, #24]
	movs	r1, r2
	movs	r0, r3
	bl	_PostTerminalSwitch
	.loc 1 1084 0
	ldr	r2, [r7, #20]
	ldr	r1, [r7]
	ldr	r3, [r7, #24]
	movs	r0, r3
	bl	_WriteBlocking
	movs	r3, r0
	str	r3, [r7, #28]
	.loc 1 1085 0
	ldr	r3, .L143+8
	ldrb	r2, [r3]
	ldr	r3, [r7, #24]
	movs	r1, r2
	movs	r0, r3
	bl	_PostTerminalSwitch
	.loc 1 1086 0
	b	.L136
.L142:
	.loc 1 1088 0
	movs	r3, #1
	rsbs	r3, r3, #0
	str	r3, [r7, #28]
	.loc 1 1089 0
	nop
.L136:
	.loc 1 1094 0
	ldr	r3, [r7, #12]
	movs	r0, #0
	bl	app_util_critical_region_exit
	b	.L140
.L129:
	.loc 1 1096 0
	movs	r3, #1
	rsbs	r3, r3, #0
	str	r3, [r7, #28]
.L140:
	.loc 1 1098 0
	ldr	r3, [r7, #28]
	.loc 1 1099 0
	movs	r0, r3
	mov	sp, r7
	add	sp, sp, #32
	@ sp needed
	pop	{r7, pc}
.L144:
	.align	2
.L143:
	.word	_SEGGER_RTT
	.word	_SEGGER_RTT+24
	.word	_ActiveTerminal
.LFE59:
	.size	SEGGER_RTT_TerminalOut, .-SEGGER_RTT_TerminalOut
	.section	.debug_frame,"",%progbits
.Lframe0:
	.4byte	.LECIE0-.LSCIE0
.LSCIE0:
	.4byte	0xffffffff
	.byte	0x3
	.ascii	"\000"
	.uleb128 0x1
	.sleb128 -4
	.uleb128 0xe
	.byte	0xc
	.uleb128 0xd
	.uleb128 0
	.align	2
.LECIE0:
.LSFDE0:
	.4byte	.LEFDE0-.LASFDE0
.LASFDE0:
	.4byte	.Lframe0
	.4byte	.LFB38
	.4byte	.LFE38-.LFB38
	.byte	0x4
	.4byte	.LCFI0-.LFB38
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1-.LCFI0
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI2-.LCFI1
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE0:
.LSFDE2:
	.4byte	.LEFDE2-.LASFDE2
.LASFDE2:
	.4byte	.Lframe0
	.4byte	.LFB39
	.4byte	.LFE39-.LFB39
	.byte	0x4
	.4byte	.LCFI3-.LFB39
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI4-.LCFI3
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.4byte	.LCFI5-.LCFI4
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE2:
.LSFDE4:
	.4byte	.LEFDE4-.LASFDE4
.LASFDE4:
	.4byte	.Lframe0
	.4byte	.LFB40
	.4byte	.LFE40-.LFB40
	.byte	0x4
	.4byte	.LCFI6-.LFB40
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI7-.LCFI6
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.4byte	.LCFI8-.LCFI7
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE4:
.LSFDE6:
	.4byte	.LEFDE6-.LASFDE6
.LASFDE6:
	.4byte	.Lframe0
	.4byte	.LFB41
	.4byte	.LFE41-.LFB41
	.byte	0x4
	.4byte	.LCFI9-.LFB41
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI10-.LCFI9
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI11-.LCFI10
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE6:
.LSFDE8:
	.4byte	.LEFDE8-.LASFDE8
.LASFDE8:
	.4byte	.Lframe0
	.4byte	.LFB42
	.4byte	.LFE42-.LFB42
	.byte	0x4
	.4byte	.LCFI12-.LFB42
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI13-.LCFI12
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI14-.LCFI13
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE8:
.LSFDE10:
	.4byte	.LEFDE10-.LASFDE10
.LASFDE10:
	.4byte	.Lframe0
	.4byte	.LFB43
	.4byte	.LFE43-.LFB43
	.byte	0x4
	.4byte	.LCFI15-.LFB43
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI16-.LCFI15
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.4byte	.LCFI17-.LCFI16
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE10:
.LSFDE12:
	.4byte	.LEFDE12-.LASFDE12
.LASFDE12:
	.4byte	.Lframe0
	.4byte	.LFB44
	.4byte	.LFE44-.LFB44
	.byte	0x4
	.4byte	.LCFI18-.LFB44
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI19-.LCFI18
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI20-.LCFI19
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE12:
.LSFDE14:
	.4byte	.LEFDE14-.LASFDE14
.LASFDE14:
	.4byte	.Lframe0
	.4byte	.LFB45
	.4byte	.LFE45-.LFB45
	.byte	0x4
	.4byte	.LCFI21-.LFB45
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI22-.LCFI21
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.4byte	.LCFI23-.LCFI22
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE14:
.LSFDE16:
	.4byte	.LEFDE16-.LASFDE16
.LASFDE16:
	.4byte	.Lframe0
	.4byte	.LFB46
	.4byte	.LFE46-.LFB46
	.byte	0x4
	.4byte	.LCFI24-.LFB46
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI25-.LCFI24
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.4byte	.LCFI26-.LCFI25
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE16:
.LSFDE18:
	.4byte	.LEFDE18-.LASFDE18
.LASFDE18:
	.4byte	.Lframe0
	.4byte	.LFB47
	.4byte	.LFE47-.LFB47
	.byte	0x4
	.4byte	.LCFI27-.LFB47
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI28-.LCFI27
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI29-.LCFI28
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE18:
.LSFDE20:
	.4byte	.LEFDE20-.LASFDE20
.LASFDE20:
	.4byte	.Lframe0
	.4byte	.LFB48
	.4byte	.LFE48-.LFB48
	.byte	0x4
	.4byte	.LCFI30-.LFB48
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI31-.LCFI30
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI32-.LCFI31
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE20:
.LSFDE22:
	.4byte	.LEFDE22-.LASFDE22
.LASFDE22:
	.4byte	.Lframe0
	.4byte	.LFB49
	.4byte	.LFE49-.LFB49
	.byte	0x4
	.4byte	.LCFI33-.LFB49
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI34-.LCFI33
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI35-.LCFI34
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE22:
.LSFDE24:
	.4byte	.LEFDE24-.LASFDE24
.LASFDE24:
	.4byte	.Lframe0
	.4byte	.LFB50
	.4byte	.LFE50-.LFB50
	.byte	0x4
	.4byte	.LCFI36-.LFB50
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI37-.LCFI36
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI38-.LCFI37
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE24:
.LSFDE26:
	.4byte	.LEFDE26-.LASFDE26
.LASFDE26:
	.4byte	.Lframe0
	.4byte	.LFB51
	.4byte	.LFE51-.LFB51
	.byte	0x4
	.4byte	.LCFI39-.LFB51
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI40-.LCFI39
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI41-.LCFI40
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE26:
.LSFDE28:
	.4byte	.LEFDE28-.LASFDE28
.LASFDE28:
	.4byte	.Lframe0
	.4byte	.LFB52
	.4byte	.LFE52-.LFB52
	.byte	0x4
	.4byte	.LCFI42-.LFB52
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI43-.LCFI42
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI44-.LCFI43
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE28:
.LSFDE30:
	.4byte	.LEFDE30-.LASFDE30
.LASFDE30:
	.4byte	.Lframe0
	.4byte	.LFB53
	.4byte	.LFE53-.LFB53
	.byte	0x4
	.4byte	.LCFI45-.LFB53
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI46-.LCFI45
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI47-.LCFI46
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE30:
.LSFDE32:
	.4byte	.LEFDE32-.LASFDE32
.LASFDE32:
	.4byte	.Lframe0
	.4byte	.LFB54
	.4byte	.LFE54-.LFB54
	.byte	0x4
	.4byte	.LCFI48-.LFB54
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI49-.LCFI48
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI50-.LCFI49
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE32:
.LSFDE34:
	.4byte	.LEFDE34-.LASFDE34
.LASFDE34:
	.4byte	.Lframe0
	.4byte	.LFB55
	.4byte	.LFE55-.LFB55
	.byte	0x4
	.4byte	.LCFI51-.LFB55
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI52-.LCFI51
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI53-.LCFI52
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE34:
.LSFDE36:
	.4byte	.LEFDE36-.LASFDE36
.LASFDE36:
	.4byte	.Lframe0
	.4byte	.LFB56
	.4byte	.LFE56-.LFB56
	.byte	0x4
	.4byte	.LCFI54-.LFB56
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI55-.LCFI54
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI56-.LCFI55
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE36:
.LSFDE38:
	.4byte	.LEFDE38-.LASFDE38
.LASFDE38:
	.4byte	.Lframe0
	.4byte	.LFB57
	.4byte	.LFE57-.LFB57
	.byte	0x4
	.4byte	.LCFI57-.LFB57
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI58-.LCFI57
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE38:
.LSFDE40:
	.4byte	.LEFDE40-.LASFDE40
.LASFDE40:
	.4byte	.Lframe0
	.4byte	.LFB58
	.4byte	.LFE58-.LFB58
	.byte	0x4
	.4byte	.LCFI59-.LFB58
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI60-.LCFI59
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.4byte	.LCFI61-.LCFI60
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE40:
.LSFDE42:
	.4byte	.LEFDE42-.LASFDE42
.LASFDE42:
	.4byte	.Lframe0
	.4byte	.LFB59
	.4byte	.LFE59-.LFB59
	.byte	0x4
	.4byte	.LCFI62-.LFB59
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI63-.LCFI62
	.byte	0xe
	.uleb128 0x28
	.byte	0x4
	.4byte	.LCFI64-.LCFI63
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE42:
	.text
.Letext0:
	.file 2 "c:\\users\\jonathan\\documents\\code\\nrf5_sdk_12.2.0_f012efa\\external\\segger_rtt\\SEGGER_RTT.h"
	.section	.debug_info,"",%progbits
.Ldebug_info0:
	.4byte	0xa01
	.2byte	0x4
	.4byte	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.4byte	.LASF62
	.byte	0xc
	.4byte	.LASF63
	.4byte	.LASF64
	.4byte	.Ldebug_ranges0+0
	.4byte	0
	.4byte	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.4byte	.LASF0
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF1
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.4byte	.LASF2
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.4byte	.LASF3
	.uleb128 0x3
	.byte	0x4
	.byte	0x5
	.ascii	"int\000"
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF4
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.4byte	.LASF5
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.4byte	.LASF6
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF7
	.uleb128 0x4
	.byte	0x4
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.4byte	.LASF8
	.uleb128 0x5
	.byte	0x4
	.4byte	0x73
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF9
	.uleb128 0x5
	.byte	0x4
	.4byte	0x80
	.uleb128 0x6
	.4byte	0x73
	.uleb128 0x7
	.byte	0x18
	.byte	0x2
	.byte	0x46
	.4byte	0xd6
	.uleb128 0x8
	.4byte	.LASF10
	.byte	0x2
	.byte	0x47
	.4byte	0x7a
	.byte	0
	.uleb128 0x8
	.4byte	.LASF11
	.byte	0x2
	.byte	0x48
	.4byte	0x6d
	.byte	0x4
	.uleb128 0x8
	.4byte	.LASF12
	.byte	0x2
	.byte	0x49
	.4byte	0x48
	.byte	0x8
	.uleb128 0x8
	.4byte	.LASF13
	.byte	0x2
	.byte	0x4a
	.4byte	0xd6
	.byte	0xc
	.uleb128 0x8
	.4byte	.LASF14
	.byte	0x2
	.byte	0x4b
	.4byte	0xd6
	.byte	0x10
	.uleb128 0x8
	.4byte	.LASF15
	.byte	0x2
	.byte	0x4c
	.4byte	0x48
	.byte	0x14
	.byte	0
	.uleb128 0x9
	.4byte	0x48
	.uleb128 0xa
	.4byte	.LASF20
	.byte	0x2
	.byte	0x4d
	.4byte	0x85
	.uleb128 0x7
	.byte	0x78
	.byte	0x2
	.byte	0x54
	.4byte	0x12b
	.uleb128 0x8
	.4byte	.LASF16
	.byte	0x2
	.byte	0x55
	.4byte	0x12b
	.byte	0
	.uleb128 0x8
	.4byte	.LASF17
	.byte	0x2
	.byte	0x56
	.4byte	0x41
	.byte	0x10
	.uleb128 0x8
	.4byte	.LASF18
	.byte	0x2
	.byte	0x57
	.4byte	0x41
	.byte	0x14
	.uleb128 0xb
	.ascii	"aUp\000"
	.byte	0x2
	.byte	0x58
	.4byte	0x13b
	.byte	0x18
	.uleb128 0x8
	.4byte	.LASF19
	.byte	0x2
	.byte	0x59
	.4byte	0x13b
	.byte	0x48
	.byte	0
	.uleb128 0xc
	.4byte	0x73
	.4byte	0x13b
	.uleb128 0xd
	.4byte	0x5d
	.byte	0xf
	.byte	0
	.uleb128 0xc
	.4byte	0xdb
	.4byte	0x14b
	.uleb128 0xd
	.4byte	0x5d
	.byte	0x1
	.byte	0
	.uleb128 0xa
	.4byte	.LASF21
	.byte	0x2
	.byte	0x5a
	.4byte	0xe6
	.uleb128 0xe
	.4byte	.LASF26
	.byte	0x1
	.byte	0xa3
	.4byte	.LFB38
	.4byte	.LFE38-.LFB38
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x178
	.uleb128 0xf
	.ascii	"p\000"
	.byte	0x1
	.byte	0xa4
	.4byte	0x178
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x5
	.byte	0x4
	.4byte	0x14b
	.uleb128 0x10
	.4byte	.LASF32
	.byte	0x1
	.byte	0xda
	.4byte	0x48
	.4byte	.LFB39
	.4byte	.LFE39-.LFB39
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1fa
	.uleb128 0x11
	.4byte	.LASF22
	.byte	0x1
	.byte	0xda
	.4byte	0x1fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x11
	.4byte	.LASF11
	.byte	0x1
	.byte	0xda
	.4byte	0x7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x11
	.4byte	.LASF23
	.byte	0x1
	.byte	0xda
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x12
	.4byte	.LASF24
	.byte	0x1
	.byte	0xdb
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x12
	.4byte	.LASF25
	.byte	0x1
	.byte	0xdc
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x12
	.4byte	.LASF14
	.byte	0x1
	.byte	0xdd
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x12
	.4byte	.LASF13
	.byte	0x1
	.byte	0xde
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x5
	.byte	0x4
	.4byte	0xdb
	.uleb128 0x13
	.4byte	.LASF27
	.byte	0x1
	.2byte	0x10d
	.4byte	.LFB40
	.4byte	.LFE40-.LFB40
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x271
	.uleb128 0x14
	.4byte	.LASF22
	.byte	0x1
	.2byte	0x10d
	.4byte	0x1fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x14
	.4byte	.LASF28
	.byte	0x1
	.2byte	0x10d
	.4byte	0x7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x14
	.4byte	.LASF23
	.byte	0x1
	.2byte	0x10d
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x15
	.4byte	.LASF29
	.byte	0x1
	.2byte	0x10e
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF13
	.byte	0x1
	.2byte	0x10f
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x16
	.ascii	"Rem\000"
	.byte	0x1
	.2byte	0x110
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x13
	.4byte	.LASF30
	.byte	0x1
	.2byte	0x133
	.4byte	.LFB41
	.4byte	.LFE41-.LFB41
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x2b4
	.uleb128 0x14
	.4byte	.LASF22
	.byte	0x1
	.2byte	0x133
	.4byte	0x1fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x14
	.4byte	.LASF31
	.byte	0x1
	.2byte	0x133
	.4byte	0x73
	.uleb128 0x2
	.byte	0x91
	.sleb128 -21
	.uleb128 0x16
	.ascii	"ac\000"
	.byte	0x1
	.2byte	0x134
	.4byte	0x2b4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0xc
	.4byte	0x73
	.4byte	0x2c4
	.uleb128 0xd
	.4byte	0x5d
	.byte	0x1
	.byte	0
	.uleb128 0x17
	.4byte	.LASF33
	.byte	0x1
	.2byte	0x149
	.4byte	0x48
	.4byte	.LFB42
	.4byte	.LFE42-.LFB42
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x319
	.uleb128 0x14
	.4byte	.LASF22
	.byte	0x1
	.2byte	0x149
	.4byte	0x1fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x15
	.4byte	.LASF14
	.byte	0x1
	.2byte	0x14a
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x15
	.4byte	.LASF13
	.byte	0x1
	.2byte	0x14b
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x16
	.ascii	"r\000"
	.byte	0x1
	.2byte	0x14c
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x18
	.4byte	.LASF38
	.byte	0x1
	.2byte	0x172
	.4byte	0x48
	.4byte	.LFB43
	.4byte	.LFE43-.LFB43
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x3bb
	.uleb128 0x14
	.4byte	.LASF34
	.byte	0x1
	.2byte	0x172
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x14
	.4byte	.LASF28
	.byte	0x1
	.2byte	0x172
	.4byte	0x64
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x14
	.4byte	.LASF35
	.byte	0x1
	.2byte	0x172
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x15
	.4byte	.LASF36
	.byte	0x1
	.2byte	0x173
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x15
	.4byte	.LASF37
	.byte	0x1
	.2byte	0x174
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF14
	.byte	0x1
	.2byte	0x175
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x15
	.4byte	.LASF13
	.byte	0x1
	.2byte	0x176
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x15
	.4byte	.LASF11
	.byte	0x1
	.2byte	0x177
	.4byte	0x3bb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF22
	.byte	0x1
	.2byte	0x178
	.4byte	0x1fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x5
	.byte	0x4
	.4byte	0x2c
	.uleb128 0x18
	.4byte	.LASF39
	.byte	0x1
	.2byte	0x1b5
	.4byte	0x48
	.4byte	.LFB44
	.4byte	.LFE44-.LFB44
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x427
	.uleb128 0x14
	.4byte	.LASF34
	.byte	0x1
	.2byte	0x1b5
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x14
	.4byte	.LASF11
	.byte	0x1
	.2byte	0x1b5
	.4byte	0x64
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.4byte	.LASF35
	.byte	0x1
	.2byte	0x1b5
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x15
	.4byte	.LASF37
	.byte	0x1
	.2byte	0x1b6
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF40
	.byte	0x1
	.2byte	0x1b7
	.4byte	0xd6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x18
	.4byte	.LASF41
	.byte	0x1
	.2byte	0x1de
	.4byte	0x48
	.4byte	.LFB45
	.4byte	.LFE45-.LFB45
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x4c9
	.uleb128 0x14
	.4byte	.LASF34
	.byte	0x1
	.2byte	0x1de
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x14
	.4byte	.LASF11
	.byte	0x1
	.2byte	0x1de
	.4byte	0x4c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x14
	.4byte	.LASF23
	.byte	0x1
	.2byte	0x1de
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x15
	.4byte	.LASF28
	.byte	0x1
	.2byte	0x1df
	.4byte	0x7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF22
	.byte	0x1
	.2byte	0x1e0
	.4byte	0x1fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x15
	.4byte	.LASF42
	.byte	0x1
	.2byte	0x1e1
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x15
	.4byte	.LASF14
	.byte	0x1
	.2byte	0x1e2
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF13
	.byte	0x1
	.2byte	0x1e3
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x16
	.ascii	"Rem\000"
	.byte	0x1
	.2byte	0x1e4
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x5
	.byte	0x4
	.4byte	0x4cf
	.uleb128 0x19
	.uleb128 0x18
	.4byte	.LASF43
	.byte	0x1
	.2byte	0x242
	.4byte	0x48
	.4byte	.LFB46
	.4byte	.LFE46-.LFB46
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x554
	.uleb128 0x14
	.4byte	.LASF34
	.byte	0x1
	.2byte	0x242
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x14
	.4byte	.LASF11
	.byte	0x1
	.2byte	0x242
	.4byte	0x4c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x14
	.4byte	.LASF23
	.byte	0x1
	.2byte	0x242
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x15
	.4byte	.LASF44
	.byte	0x1
	.2byte	0x243
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF42
	.byte	0x1
	.2byte	0x244
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LASF28
	.byte	0x1
	.2byte	0x245
	.4byte	0x7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x15
	.4byte	.LASF22
	.byte	0x1
	.2byte	0x246
	.4byte	0x1fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x18
	.4byte	.LASF45
	.byte	0x1
	.2byte	0x289
	.4byte	0x48
	.4byte	.LFB47
	.4byte	.LFE47-.LFB47
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x5ba
	.uleb128 0x14
	.4byte	.LASF34
	.byte	0x1
	.2byte	0x289
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x14
	.4byte	.LASF11
	.byte	0x1
	.2byte	0x289
	.4byte	0x4c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.4byte	.LASF23
	.byte	0x1
	.2byte	0x289
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x15
	.4byte	.LASF44
	.byte	0x1
	.2byte	0x28a
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF40
	.byte	0x1
	.2byte	0x28b
	.4byte	0xd6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x18
	.4byte	.LASF46
	.byte	0x1
	.2byte	0x2b0
	.4byte	0x48
	.4byte	.LFB48
	.4byte	.LFE48-.LFB48
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x600
	.uleb128 0x14
	.4byte	.LASF34
	.byte	0x1
	.2byte	0x2b0
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1a
	.ascii	"s\000"
	.byte	0x1
	.2byte	0x2b0
	.4byte	0x7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x16
	.ascii	"Len\000"
	.byte	0x1
	.2byte	0x2b1
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x18
	.4byte	.LASF47
	.byte	0x1
	.2byte	0x2c6
	.4byte	0x41
	.4byte	.LFB49
	.4byte	.LFE49-.LFB49
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x635
	.uleb128 0x16
	.ascii	"c\000"
	.byte	0x1
	.2byte	0x2c7
	.4byte	0x73
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x16
	.ascii	"r\000"
	.byte	0x1
	.2byte	0x2c8
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x18
	.4byte	.LASF48
	.byte	0x1
	.2byte	0x2e2
	.4byte	0x41
	.4byte	.LFB50
	.4byte	.LFE50-.LFB50
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x65d
	.uleb128 0x16
	.ascii	"r\000"
	.byte	0x1
	.2byte	0x2e3
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x18
	.4byte	.LASF49
	.byte	0x1
	.2byte	0x2f9
	.4byte	0x41
	.4byte	.LFB51
	.4byte	.LFE51-.LFB51
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x694
	.uleb128 0x15
	.4byte	.LASF14
	.byte	0x1
	.2byte	0x2fa
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x16
	.ascii	"r\000"
	.byte	0x1
	.2byte	0x2fb
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF50
	.byte	0x1
	.2byte	0x313
	.4byte	0x48
	.4byte	.LFB52
	.4byte	.LFE52-.LFB52
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x6da
	.uleb128 0x14
	.4byte	.LASF34
	.byte	0x1
	.2byte	0x313
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF22
	.byte	0x1
	.2byte	0x314
	.4byte	0x1fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x16
	.ascii	"v\000"
	.byte	0x1
	.2byte	0x315
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x18
	.4byte	.LASF51
	.byte	0x1
	.2byte	0x331
	.4byte	0x41
	.4byte	.LFB53
	.4byte	.LFE53-.LFB53
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x75c
	.uleb128 0x14
	.4byte	.LASF34
	.byte	0x1
	.2byte	0x331
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x14
	.4byte	.LASF10
	.byte	0x1
	.2byte	0x331
	.4byte	0x7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.4byte	.LASF11
	.byte	0x1
	.2byte	0x331
	.4byte	0x64
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x14
	.4byte	.LASF35
	.byte	0x1
	.2byte	0x331
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x14
	.4byte	.LASF15
	.byte	0x1
	.2byte	0x331
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x16
	.ascii	"r\000"
	.byte	0x1
	.2byte	0x332
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF40
	.byte	0x1
	.2byte	0x333
	.4byte	0xd6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x18
	.4byte	.LASF52
	.byte	0x1
	.2byte	0x35c
	.4byte	0x41
	.4byte	.LFB54
	.4byte	.LFE54-.LFB54
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x7de
	.uleb128 0x14
	.4byte	.LASF34
	.byte	0x1
	.2byte	0x35c
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x14
	.4byte	.LASF10
	.byte	0x1
	.2byte	0x35c
	.4byte	0x7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.4byte	.LASF11
	.byte	0x1
	.2byte	0x35c
	.4byte	0x64
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x14
	.4byte	.LASF35
	.byte	0x1
	.2byte	0x35c
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x14
	.4byte	.LASF15
	.byte	0x1
	.2byte	0x35c
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x16
	.ascii	"r\000"
	.byte	0x1
	.2byte	0x35d
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF40
	.byte	0x1
	.2byte	0x35e
	.4byte	0xd6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x18
	.4byte	.LASF53
	.byte	0x1
	.2byte	0x383
	.4byte	0x41
	.4byte	.LFB55
	.4byte	.LFE55-.LFB55
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x833
	.uleb128 0x14
	.4byte	.LASF34
	.byte	0x1
	.2byte	0x383
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x14
	.4byte	.LASF10
	.byte	0x1
	.2byte	0x383
	.4byte	0x7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x16
	.ascii	"r\000"
	.byte	0x1
	.2byte	0x384
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF40
	.byte	0x1
	.2byte	0x385
	.4byte	0xd6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x18
	.4byte	.LASF54
	.byte	0x1
	.2byte	0x3a3
	.4byte	0x41
	.4byte	.LFB56
	.4byte	.LFE56-.LFB56
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x888
	.uleb128 0x14
	.4byte	.LASF34
	.byte	0x1
	.2byte	0x3a3
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x14
	.4byte	.LASF10
	.byte	0x1
	.2byte	0x3a3
	.4byte	0x7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x16
	.ascii	"r\000"
	.byte	0x1
	.2byte	0x3a4
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF40
	.byte	0x1
	.2byte	0x3a5
	.4byte	0xd6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x1c
	.4byte	.LASF65
	.byte	0x1
	.2byte	0x3bc
	.4byte	.LFB57
	.4byte	.LFE57-.LFB57
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x18
	.4byte	.LASF55
	.byte	0x1
	.2byte	0x3ce
	.4byte	0x41
	.4byte	.LFB58
	.4byte	.LFE58-.LFB58
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x90c
	.uleb128 0x14
	.4byte	.LASF31
	.byte	0x1
	.2byte	0x3ce
	.4byte	0x73
	.uleb128 0x2
	.byte	0x91
	.sleb128 -33
	.uleb128 0x16
	.ascii	"ac\000"
	.byte	0x1
	.2byte	0x3cf
	.4byte	0x2b4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LASF22
	.byte	0x1
	.2byte	0x3d0
	.4byte	0x1fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x15
	.4byte	.LASF40
	.byte	0x1
	.2byte	0x3d1
	.4byte	0xd6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x15
	.4byte	.LASF42
	.byte	0x1
	.2byte	0x3d2
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x16
	.ascii	"r\000"
	.byte	0x1
	.2byte	0x3d3
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x18
	.4byte	.LASF56
	.byte	0x1
	.2byte	0x401
	.4byte	0x41
	.4byte	.LFB59
	.4byte	.LFE59-.LFB59
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x98e
	.uleb128 0x14
	.4byte	.LASF31
	.byte	0x1
	.2byte	0x401
	.4byte	0x73
	.uleb128 0x2
	.byte	0x91
	.sleb128 -33
	.uleb128 0x1a
	.ascii	"s\000"
	.byte	0x1
	.2byte	0x401
	.4byte	0x7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x15
	.4byte	.LASF44
	.byte	0x1
	.2byte	0x402
	.4byte	0x41
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF57
	.byte	0x1
	.2byte	0x403
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF42
	.byte	0x1
	.2byte	0x404
	.4byte	0x48
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LASF22
	.byte	0x1
	.2byte	0x405
	.4byte	0x1fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x15
	.4byte	.LASF40
	.byte	0x1
	.2byte	0x406
	.4byte	0xd6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0xc
	.4byte	0x2c
	.4byte	0x99e
	.uleb128 0xd
	.4byte	0x5d
	.byte	0xf
	.byte	0
	.uleb128 0x12
	.4byte	.LASF58
	.byte	0x1
	.byte	0x7c
	.4byte	0x98e
	.uleb128 0x5
	.byte	0x3
	.4byte	_aTerminalId
	.uleb128 0xc
	.4byte	0x73
	.4byte	0x9c0
	.uleb128 0x1d
	.4byte	0x5d
	.2byte	0x1ff
	.byte	0
	.uleb128 0x12
	.4byte	.LASF59
	.byte	0x1
	.byte	0x87
	.4byte	0x9af
	.uleb128 0x5
	.byte	0x3
	.4byte	_acUpBuffer
	.uleb128 0x12
	.4byte	.LASF60
	.byte	0x1
	.byte	0x88
	.4byte	0x12b
	.uleb128 0x5
	.byte	0x3
	.4byte	_acDownBuffer
	.uleb128 0x12
	.4byte	.LASF61
	.byte	0x1
	.byte	0x8e
	.4byte	0x73
	.uleb128 0x5
	.byte	0x3
	.4byte	_ActiveTerminal
	.uleb128 0x1e
	.4byte	.LASF66
	.byte	0x1
	.byte	0x8c
	.4byte	0x14b
	.uleb128 0x5
	.byte	0x3
	.4byte	_SEGGER_RTT
	.byte	0
	.section	.debug_abbrev,"",%progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.uleb128 0x2134
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x26
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_pubnames,"",%progbits
	.4byte	0x280
	.2byte	0x2
	.4byte	.Ldebug_info0
	.4byte	0xa05
	.4byte	0x156
	.ascii	"_DoInit\000"
	.4byte	0x17e
	.ascii	"_WriteBlocking\000"
	.4byte	0x200
	.ascii	"_WriteNoCheck\000"
	.4byte	0x271
	.ascii	"_PostTerminalSwitch\000"
	.4byte	0x2c4
	.ascii	"_GetAvailWriteSpace\000"
	.4byte	0x319
	.ascii	"SEGGER_RTT_ReadNoLock\000"
	.4byte	0x3c1
	.ascii	"SEGGER_RTT_Read\000"
	.4byte	0x427
	.ascii	"SEGGER_RTT_WriteSkipNoLock\000"
	.4byte	0x4d0
	.ascii	"SEGGER_RTT_WriteNoLock\000"
	.4byte	0x554
	.ascii	"SEGGER_RTT_Write\000"
	.4byte	0x5ba
	.ascii	"SEGGER_RTT_WriteString\000"
	.4byte	0x600
	.ascii	"SEGGER_RTT_GetKey\000"
	.4byte	0x635
	.ascii	"SEGGER_RTT_WaitKey\000"
	.4byte	0x65d
	.ascii	"SEGGER_RTT_HasKey\000"
	.4byte	0x694
	.ascii	"SEGGER_RTT_HasData\000"
	.4byte	0x6da
	.ascii	"SEGGER_RTT_ConfigUpBuffer\000"
	.4byte	0x75c
	.ascii	"SEGGER_RTT_ConfigDownBuffer\000"
	.4byte	0x7de
	.ascii	"SEGGER_RTT_SetNameUpBuffer\000"
	.4byte	0x833
	.ascii	"SEGGER_RTT_SetNameDownBuffer\000"
	.4byte	0x888
	.ascii	"SEGGER_RTT_Init\000"
	.4byte	0x89a
	.ascii	"SEGGER_RTT_SetTerminal\000"
	.4byte	0x90c
	.ascii	"SEGGER_RTT_TerminalOut\000"
	.4byte	0x99e
	.ascii	"_aTerminalId\000"
	.4byte	0x9c0
	.ascii	"_acUpBuffer\000"
	.4byte	0x9d1
	.ascii	"_acDownBuffer\000"
	.4byte	0x9e2
	.ascii	"_ActiveTerminal\000"
	.4byte	0x9f3
	.ascii	"_SEGGER_RTT\000"
	.4byte	0
	.section	.debug_pubtypes,"",%progbits
	.4byte	0xeb
	.2byte	0x2
	.4byte	.Ldebug_info0
	.4byte	0xa05
	.4byte	0x25
	.ascii	"signed char\000"
	.4byte	0x2c
	.ascii	"unsigned char\000"
	.4byte	0x33
	.ascii	"short int\000"
	.4byte	0x3a
	.ascii	"short unsigned int\000"
	.4byte	0x41
	.ascii	"int\000"
	.4byte	0x48
	.ascii	"unsigned int\000"
	.4byte	0x4f
	.ascii	"long long int\000"
	.4byte	0x56
	.ascii	"long long unsigned int\000"
	.4byte	0x5d
	.ascii	"sizetype\000"
	.4byte	0x66
	.ascii	"long int\000"
	.4byte	0x73
	.ascii	"char\000"
	.4byte	0xdb
	.ascii	"SEGGER_RTT_RING_BUFFER\000"
	.4byte	0x14b
	.ascii	"SEGGER_RTT_CB\000"
	.4byte	0
	.section	.debug_aranges,"",%progbits
	.4byte	0xc4
	.2byte	0x2
	.4byte	.Ldebug_info0
	.byte	0x4
	.byte	0
	.2byte	0
	.2byte	0
	.4byte	.LFB38
	.4byte	.LFE38-.LFB38
	.4byte	.LFB39
	.4byte	.LFE39-.LFB39
	.4byte	.LFB40
	.4byte	.LFE40-.LFB40
	.4byte	.LFB41
	.4byte	.LFE41-.LFB41
	.4byte	.LFB42
	.4byte	.LFE42-.LFB42
	.4byte	.LFB43
	.4byte	.LFE43-.LFB43
	.4byte	.LFB44
	.4byte	.LFE44-.LFB44
	.4byte	.LFB45
	.4byte	.LFE45-.LFB45
	.4byte	.LFB46
	.4byte	.LFE46-.LFB46
	.4byte	.LFB47
	.4byte	.LFE47-.LFB47
	.4byte	.LFB48
	.4byte	.LFE48-.LFB48
	.4byte	.LFB49
	.4byte	.LFE49-.LFB49
	.4byte	.LFB50
	.4byte	.LFE50-.LFB50
	.4byte	.LFB51
	.4byte	.LFE51-.LFB51
	.4byte	.LFB52
	.4byte	.LFE52-.LFB52
	.4byte	.LFB53
	.4byte	.LFE53-.LFB53
	.4byte	.LFB54
	.4byte	.LFE54-.LFB54
	.4byte	.LFB55
	.4byte	.LFE55-.LFB55
	.4byte	.LFB56
	.4byte	.LFE56-.LFB56
	.4byte	.LFB57
	.4byte	.LFE57-.LFB57
	.4byte	.LFB58
	.4byte	.LFE58-.LFB58
	.4byte	.LFB59
	.4byte	.LFE59-.LFB59
	.4byte	0
	.4byte	0
	.section	.debug_ranges,"",%progbits
.Ldebug_ranges0:
	.4byte	.LFB38
	.4byte	.LFE38
	.4byte	.LFB39
	.4byte	.LFE39
	.4byte	.LFB40
	.4byte	.LFE40
	.4byte	.LFB41
	.4byte	.LFE41
	.4byte	.LFB42
	.4byte	.LFE42
	.4byte	.LFB43
	.4byte	.LFE43
	.4byte	.LFB44
	.4byte	.LFE44
	.4byte	.LFB45
	.4byte	.LFE45
	.4byte	.LFB46
	.4byte	.LFE46
	.4byte	.LFB47
	.4byte	.LFE47
	.4byte	.LFB48
	.4byte	.LFE48
	.4byte	.LFB49
	.4byte	.LFE49
	.4byte	.LFB50
	.4byte	.LFE50
	.4byte	.LFB51
	.4byte	.LFE51
	.4byte	.LFB52
	.4byte	.LFE52
	.4byte	.LFB53
	.4byte	.LFE53
	.4byte	.LFB54
	.4byte	.LFE54
	.4byte	.LFB55
	.4byte	.LFE55
	.4byte	.LFB56
	.4byte	.LFE56
	.4byte	.LFB57
	.4byte	.LFE57
	.4byte	.LFB58
	.4byte	.LFE58
	.4byte	.LFB59
	.4byte	.LFE59
	.4byte	0
	.4byte	0
	.section	.debug_line,"",%progbits
.Ldebug_line0:
	.section	.debug_str,"MS",%progbits,1
.LASF32:
	.ascii	"_WriteBlocking\000"
.LASF13:
	.ascii	"WrOff\000"
.LASF40:
	.ascii	"SavedState\000"
.LASF19:
	.ascii	"aDown\000"
.LASF28:
	.ascii	"pData\000"
.LASF2:
	.ascii	"short int\000"
.LASF51:
	.ascii	"SEGGER_RTT_ConfigUpBuffer\000"
.LASF16:
	.ascii	"acID\000"
.LASF7:
	.ascii	"sizetype\000"
.LASF65:
	.ascii	"SEGGER_RTT_Init\000"
.LASF36:
	.ascii	"NumBytesRem\000"
.LASF22:
	.ascii	"pRing\000"
.LASF33:
	.ascii	"_GetAvailWriteSpace\000"
.LASF61:
	.ascii	"_ActiveTerminal\000"
.LASF26:
	.ascii	"_DoInit\000"
.LASF14:
	.ascii	"RdOff\000"
.LASF55:
	.ascii	"SEGGER_RTT_SetTerminal\000"
.LASF12:
	.ascii	"SizeOfBuffer\000"
.LASF43:
	.ascii	"SEGGER_RTT_WriteNoLock\000"
.LASF54:
	.ascii	"SEGGER_RTT_SetNameDownBuffer\000"
.LASF0:
	.ascii	"signed char\000"
.LASF31:
	.ascii	"TerminalId\000"
.LASF15:
	.ascii	"Flags\000"
.LASF39:
	.ascii	"SEGGER_RTT_Read\000"
.LASF25:
	.ascii	"NumBytesWritten\000"
.LASF5:
	.ascii	"long long int\000"
.LASF37:
	.ascii	"NumBytesRead\000"
.LASF21:
	.ascii	"SEGGER_RTT_CB\000"
.LASF20:
	.ascii	"SEGGER_RTT_RING_BUFFER\000"
.LASF10:
	.ascii	"sName\000"
.LASF11:
	.ascii	"pBuffer\000"
.LASF17:
	.ascii	"MaxNumUpBuffers\000"
.LASF1:
	.ascii	"unsigned char\000"
.LASF35:
	.ascii	"BufferSize\000"
.LASF29:
	.ascii	"NumBytesAtOnce\000"
.LASF41:
	.ascii	"SEGGER_RTT_WriteSkipNoLock\000"
.LASF64:
	.ascii	"C:\\Users\\Jonathan\\Documents\\code\\arcReceiverMu"
	.ascii	"ltiChannelSniffer\\pca10028\\blank\\arm5_no_packs\000"
.LASF57:
	.ascii	"FragLen\000"
.LASF6:
	.ascii	"long long unsigned int\000"
.LASF4:
	.ascii	"unsigned int\000"
.LASF30:
	.ascii	"_PostTerminalSwitch\000"
.LASF59:
	.ascii	"_acUpBuffer\000"
.LASF3:
	.ascii	"short unsigned int\000"
.LASF23:
	.ascii	"NumBytes\000"
.LASF24:
	.ascii	"NumBytesToWrite\000"
.LASF9:
	.ascii	"char\000"
.LASF8:
	.ascii	"long int\000"
.LASF42:
	.ascii	"Avail\000"
.LASF46:
	.ascii	"SEGGER_RTT_WriteString\000"
.LASF27:
	.ascii	"_WriteNoCheck\000"
.LASF50:
	.ascii	"SEGGER_RTT_HasData\000"
.LASF58:
	.ascii	"_aTerminalId\000"
.LASF49:
	.ascii	"SEGGER_RTT_HasKey\000"
.LASF53:
	.ascii	"SEGGER_RTT_SetNameUpBuffer\000"
.LASF60:
	.ascii	"_acDownBuffer\000"
.LASF52:
	.ascii	"SEGGER_RTT_ConfigDownBuffer\000"
.LASF38:
	.ascii	"SEGGER_RTT_ReadNoLock\000"
.LASF62:
	.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
	.ascii	"anch revision 237715] -fmessage-length=0 -mtp=soft "
	.ascii	"-mcpu=cortex-m0 -mlittle-endian -mfloat-abi=soft -m"
	.ascii	"thumb -g2 -gpubnames -std=gnu99 -fno-dwarf2-cfi-asm"
	.ascii	" -fno-builtin -ffunction-sections -fdata-sections -"
	.ascii	"fshort-enums -fno-common\000"
.LASF44:
	.ascii	"Status\000"
.LASF56:
	.ascii	"SEGGER_RTT_TerminalOut\000"
.LASF66:
	.ascii	"_SEGGER_RTT\000"
.LASF45:
	.ascii	"SEGGER_RTT_Write\000"
.LASF47:
	.ascii	"SEGGER_RTT_GetKey\000"
.LASF48:
	.ascii	"SEGGER_RTT_WaitKey\000"
.LASF18:
	.ascii	"MaxNumDownBuffers\000"
.LASF63:
	.ascii	"C:/Users/Jonathan/Documents/code/arcReceiverMultiCh"
	.ascii	"annelSniffer/pca10028/blank/arm5_no_packs/../../../"
	.ascii	"../nRF5_SDK_12.2.0_f012efa/external/segger_rtt/SEGG"
	.ascii	"ER_RTT.c\000"
.LASF34:
	.ascii	"BufferIndex\000"
	.ident	"GCC: (GNU) 5.4.1 20160609 (release) [ARM/embedded-5-branch revision 237715]"
